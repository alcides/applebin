[user]
	name = Alcides Fonseca
	email = me@alcidesfonseca.com
[core]
	editor = /usr/bin/vim
	excludesfile = /Users/alcides/.gitignore
	whitespace = space-before-tab,indent-with-non-tab,trailing-space
	pager = cat
	ignorecase = false
[rerere]
	enabled = 1
	autoupdate = 1
[alias]
	ce = add --update
	w = whatchanged
	uncommit = reset --soft HEAD^
	amend = commit --amend -C HEAD
	weekly = shortlog --since=1weekago
	lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --
	p = !"git pull; git submodule foreach git pull origin master"
	c = clone --recursive
	undopush = push -f origin HEAD^:master
	stash-all = stash save --include-untracked
	prune = fetch --prune
	permission-reset = !git diff -p -R --no-color | grep -E \"^(diff|(old|new) mode)\" --color=never | git apply
#  gui = !sh -c '~/Code/Support/homebrew/opt/git/libexec/git-core/git-gui'
	local-branch-dates  = !git for-each-ref --sort=committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))' # Get the activity date for each local branch
	remote-branch-dates = !git branch -r --sort=-committerdate --format='%(HEAD)%(color:yellow)%(refname:short)|%(color:bold green)%(committerdate:relative)|%(color:blue)|%(color:magenta)%(authorname)%(color:reset)' --color=always | column -ts'|'
	lm      = log --pretty=%B -1 # Print out the entirety of the previous log message, pipe to pbcopy for copying to clipboard.
	search  = !git pretty --all -S # Search for text within a commit
[push]
	default = matching
	recurseSubmodules = on-demand
[apply]
	ignorewhitespace = change
	whitespace = fix
[diff]
  renames = copy
	tool = filemerge
[color]
	ui = true
	pager = true
  interactive = auto
  diff = auto
  status = auto
  branch = auto
[url "https://github.com/"]
  insteadOf = "gh:"
[clean]
  requireForce = true
[difftool "filemerge"]
  cmd = "/Applications/Xcode.app/Contents/Developer/usr/bin/opendiff $LOCAL $REMOTE"
[mergetool "opendiff"]
  cmd = "opendiff \"$LOCAL\"  \"$REMOTE\" \"$(if test -f \"$BASE\"; then echo \"--ancestor $BASE\"; else echo \"--ancestor $LOCAL\"; fi)\" --merge=\"$MERGED\" "
[merge]
	tool = diffmerge
[mergetool "diffmerge"]
	cmd = diffmerge --merge\n--result=$MERGED $LOCAL $BASE $REMOTE
	trustExitCode = true
[difftool]
	prompt = false
[help]
	autocorrect = 1
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[commit]
	gpgsign = false

[column]
    ui = auto
[branch]
	sort = -committerdate

[tag]
    sort = version:refname
[init]
        defaultBranch = main
[diff]
        algorithm = histogram
        colorMoved = plain
        mnemonicPrefix = true
        renames = true
[push]
        default = simple
        autoSetupRemote = true
        followTags = true
[fetch]
        prune = true
        pruneTags = true
        all = true

# why the hell not?

[help]
        autocorrect = prompt
[commit]
        verbose = true
[rerere]
        enabled = true
        autoupdate = true
[core]
        excludesfile = ~/.gitignore
[rebase]
        autoSquash = true
        autoStash = true
        updateRefs = true

# a matter of taste (uncomment if you dare)

[core]
        # fsmonitor = true
        # untrackedCache = true
[merge]
        # (just 'diff3' if git version < 2.3)
        # conflictstyle = zdiff3 
[pull]
	rebase = false
[filter "lfs"]
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
[init]
	defaultBranch = main
